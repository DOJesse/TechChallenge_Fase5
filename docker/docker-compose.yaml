services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8080:8080"
    networks:
      - monitoring

  ui:
    build:
      context: ..
      dockerfile: docker/Dockerfile.streamlit
    environment:
      - API_URL=http://api:8080
    ports:
      - "8502:8501"
    depends_on:
      - api
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    build:
      context: ..
      dockerfile: docker/Dockerfile.grafana    
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin" 
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  # opcional, para persistir dados do Grafana
  grafana-data:
    name: grafana-data
